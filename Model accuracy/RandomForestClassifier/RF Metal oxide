from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report
from sklearn.model_selection import train_test_split, cross_val_score, cross_val_predict
from sklearn.preprocessing import MinMaxScaler
import pandas as pd

data = pd.read_excel(r"D:桌面/shujukuE.xlsx", sheet_name="metal oxide", index_col=0)
print(data)

# 导入数据集
X = data.loc[1:641, 'metal number':'detection method'].values
Y = data.loc[1:641, 'MIC'].values

# 正则化处理
scaler = MinMaxScaler()
X_normalized = scaler.fit_transform(X)

# 先将数据划分为训练和测试样本
train_x, test_x, train_y, test_y = train_test_split(X_normalized, Y, test_size=0.2, random_state=258)

# 3. 模型训练与预测
model = RandomForestClassifier()
model.fit(train_x, train_y)
y_pred_train = model.predict(train_x)
y_pred_test = model.predict(test_x)

# 4. 计算训练集和测试集的准确率（10倍交叉验证）
train_cv_scores = cross_val_score(model, train_x, train_y, cv=10)
test_cv_scores = cross_val_score(model, test_x, test_y, cv=10)
print("训练集准确率（10倍交叉验证）：", train_cv_scores.mean())
print("测试集准确率（10倍交叉验证）：", test_cv_scores.mean())

# 5. 对数据集进行10倍交叉验证并计算准确率和总体分类报告
cv_scores = cross_val_score(model, X_normalized, Y, cv=10)
print("交叉验证准确率：", cv_scores.mean())
y_pred_cv = cross_val_predict(model, X_normalized, Y, cv=10)
cv_classification_report = classification_report(Y, y_pred_cv)
print("交叉验证分类报告：")
print(cv_classification_report)

# 6. 模型评价
classification_rep = classification_report(test_y, y_pred_test)
print("模型评价：")
print(classification_rep)
