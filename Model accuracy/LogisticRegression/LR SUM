from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report
from sklearn.model_selection import train_test_split, cross_val_score, cross_val_predict
import pandas as pd

# 读取数据集
data = pd.read_excel(r"D:桌面/shujukuE.xlsx", sheet_name="Sheet3all", index_col=0)
print(data)

# 导入特征和标签
X = data.loc[1:1482, 'metal number':'detection method'].values
Y = data.loc[1:1482, 'MIC'].values

# 先将数据划分为训练和测试样本
train_x, test_x, train_y, test_y = train_test_split(X, Y, test_size=0.2, random_state=258)

# 模型训练与预测
model = LogisticRegression()
model.fit(train_x, train_y)
y_pred_train = model.predict(train_x)
y_pred_test = model.predict(test_x)

# 计算训练集和测试集的准确率
train_accuracy = accuracy_score(train_y, y_pred_train)
test_accuracy = accuracy_score(test_y, y_pred_test)
print("训练集准确率：", train_accuracy)
print("测试集准确率：", test_accuracy)

# 对数据集进行10倍交叉验证并计算准确率和分类报告
cv_scores = cross_val_score(model, X, Y, cv=10)
print("交叉验证准确率：", cv_scores.mean())
y_pred_cv = cross_val_predict(model, X, Y, cv=10)
cv_classification_report = classification_report(Y, y_pred_cv)
print("交叉验证分类报告：")
print(cv_classification_report)

# 计算训练集和测试集的准确率（10倍交叉验证）
train_cv_scores = cross_val_score(model, train_x, train_y, cv=10)
test_cv_scores = cross_val_score(model, test_x, test_y, cv=10)
print("训练集准确率（10倍交叉验证）：", train_cv_scores.mean())
print("测试集准确率（10倍交叉验证）：", test_cv_scores.mean())

# 计算训练集和测试集的准确率（10倍交叉验证）的分类报告
train_cv_pred = cross_val_predict(model, train_x, train_y, cv=10)
test_cv_pred = cross_val_predict(model, test_x, test_y, cv=10)
train_classification_report = classification_report(train_y, train_cv_pred)
test_classification_report = classification_report(test_y, test_cv_pred)
print("训练集准确率（10倍交叉验证）的分类报告：")
print(train_classification_report)
print("测试集准确率（10倍交叉验证）的分类报告：")
print(test_classification_report)
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn import metrics
from sklearn.model_selection import train_test_split, cross_val_score
from sklearn.metrics import accuracy_score, classification_report

data = pd.read_excel(r"D:桌面/shujukuE.xlsx", sheet_name="Sheet3all", index_col=0)
print(data)


X = data.loc[1:1482, 'metal number':'detection method'].values
Y = data.loc[1:1482, 'MIC'].values
# 先将数据划分为训练和测试样本
train_x, test_x, train_y, test_y =\
    train_test_split(X, Y, test_size=0.2, random_state=258) # random_state是为了保留种子，保证每次跑出来的数都一样

# 创建并训练逻辑回归模型
model = LogisticRegression()
model.fit(train_x, train_y)

# 预测数据结果
predict_y = model.predict(test_x)
# 预测训练集数据结果
train_predict_y = model.predict(train_x)

# 计算训练集和测试集的准确率
train_scores = cross_val_score(model, train_x, train_y, cv=10)
test_scores = cross_val_score(model, test_x, test_y, cv=10)
# 输出训练集和测试集的准确率
print("训练集准确率：", train_scores.mean())
print("测试集准确率：", test_scores.mean())

# 进行10倍交叉验证并计算准确率
cv_scores = cross_val_score(model, X, Y, cv=10)
mean_accuracy = np.mean(cv_scores)
print('10倍交叉验证准确率为：%.2f%%' % (mean_accuracy * 100))

# 计算classification_report
report = classification_report(test_y, predict_y)
# 打印classification_report
print(report)
